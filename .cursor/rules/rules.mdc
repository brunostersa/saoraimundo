# üìê Rules ‚Äì Boas Pr√°ticas para o Cursor

## 1. Organiza√ß√£o de C√≥digo
- Usar indenta√ß√£o consistente (2 ou 4 espa√ßos, sem tabs misturados).
- Nomeclatura sem√¢ntica:
  - Vari√°veis e fun√ß√µes ‚Üí `camelCase`
  - Classes e componentes ‚Üí `PascalCase`
  - Constantes globais ‚Üí `UPPER_SNAKE_CASE`
- Dividir arquivos grandes em m√≥dulos menores e coesos.
- Evitar c√≥digo morto ou coment√°rios desnecess√°rios.

---

## 2. Arquitetura da Informa√ß√£o
- Fluxos simples: cada tela/p√°gina deve ter **um √∫nico objetivo central**.
- Hierarquia de conte√∫do em no m√°ximo **3 n√≠veis** (Ex.: t√≠tulo > se√ß√£o > detalhe).
- Navega√ß√£o consistente (menus, breadcrumbs, bot√µes de a√ß√£o).
- Evitar sobrecarga cognitiva ‚Üí apresentar informa√ß√£o progressivamente.

---

## 3. Design de Interfaces (UI/UX)
- Tipografia clara e acess√≠vel (m√≠nimo 16px para textos).
- Contraste adequado entre fundo e texto (seguir WCAG AA).
- Usar princ√≠pios de **proximidade, alinhamento e hierarquia visual**.
- Sempre prever feedback visual para a√ß√µes (hover, loading, confirma√ß√£o).
- M√°ximo de **2 a 3 cores prim√°rias** + neutros.

---

## 4. Performance
- Carregar apenas scripts e estilos necess√°rios por p√°gina.
- Utilizar lazy loading para imagens e componentes pesados.
- Reaproveitar componentes sempre que poss√≠vel.
- Aplicar DRY (Don‚Äôt Repeat Yourself): evitar repeti√ß√µes de c√≥digo.

---

## 5. Acessibilidade
- Elementos interativos com descri√ß√µes claras (`aria-label`, `alt`, `title`).
- Interface naveg√°vel via teclado (tab/enter/esc).
- N√£o depender apenas de cores para transmitir informa√ß√µes.
- Compatibilidade com leitores de tela.

---

## 6. Documenta√ß√£o
- Coment√°rios curtos e objetivos apenas quando necess√°rio.
- Documentar fun√ß√µes p√∫blicas e componentes reutiliz√°veis.
- README em cada projeto com:
  - Objetivo
  - Como rodar localmente
  - Depend√™ncias principais
  - Fluxo de deploy

---

## 7. Versionamento
- Branch principal (`main` / `master`) sempre est√°vel.
- Criar branches descritivas (`feature/login-flow`).
- Commits claros seguindo **Conventional Commits**:
  - `feat: adiciona filtro de im√≥veis`
  - `fix: corrige bug no layout mobile`
  - `docs: atualiza instru√ß√µes de deploy`

---

## 8. Seguran√ßa
- Nunca expor chaves de API ou credenciais no reposit√≥rio.
- Usar vari√°veis de ambiente (`.env`) e ignorar no `.gitignore`.
- Validar entradas de usu√°rio em formul√°rios.
- Manter depend√™ncias cr√≠ticas atualizadas.
